{"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral","doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildApp","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBPeripheral"}],"title":"AsyncCBPeripheral","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:14BLEConcurrency17AsyncCBPeripheralP","modules":[{"name":"BLEConcurrency"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncCBPeripheral"}]},"abstract":[{"type":"text","text":"This is a test to create a protocol that need to be used when implementing a AsyncCBPeripheral wrapper"}],"sections":[],"identifier":{"url":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/BatteryMonitor","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/FCNanoBLESense","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/init(peripheral:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/peripheral"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/reconnect(peripheral:)"]},{"title":"Type Properties","identifiers":["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/nameFilter","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/services"]}],"variants":[{"paths":["\/documentation\/bleconcurrency\/asynccbperipheral"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBPeripheral"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this demo project is the implementation of the async\/await created in a general fashion, hopefully helping you to"}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"}]}],"references":{"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral/reconnect(peripheral:)":{"role":"symbol","title":"reconnect(peripheral:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reconnect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/reconnect(peripheral:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/bleconcurrency\/asynccbperipheral\/reconnect(peripheral:)"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral/init(peripheral:)":{"role":"symbol","title":"init(peripheral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/init(peripheral:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/bleconcurrency\/asynccbperipheral\/init(peripheral:)"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency":{"role":"collection","title":"BLEConcurrency","abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral/services":{"role":"symbol","title":"services","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"CBUUID","preciseIdentifier":"c:objc(cs)CBUUID"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"List of the services to use \/ scan for"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/services","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/bleconcurrency\/asynccbperipheral\/services"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/BatteryMonitor":{"role":"symbol","title":"BatteryMonitor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BatteryMonitor"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/BatteryMonitor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BatteryMonitor"}],"url":"\/documentation\/bleconcurrency\/batterymonitor"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral/nameFilter":{"role":"symbol","title":"nameFilter","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nameFilter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/nameFilter","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/bleconcurrency\/asynccbperipheral\/namefilter"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral":{"role":"symbol","title":"AsyncCBPeripheral","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBPeripheral"}],"abstract":[{"type":"text","text":"This is a test to create a protocol that need to be used when implementing a AsyncCBPeripheral wrapper"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCBPeripheral"}],"url":"\/documentation\/bleconcurrency\/asynccbperipheral"},"doc://com.friisconsult.BLEConcurrency/tutorials/BuildBLEPeripheral":{"role":"overview","title":"Arduino BLE sense","abstract":[{"type":"text","text":"This is fun, we start completely out of the iOS world, even though that this project is all about iOS and BLE connectivity."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral","kind":"overview","type":"topic","url":"\/tutorials\/buildbleperipheral"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/MotionSensor":{"role":"symbol","title":"MotionSensor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MotionSensor"}],"abstract":[{"type":"text","text":"Implementation of the Motion sensor for the Arduino nano 33, with compatible sensors."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MotionSensor"}],"url":"\/documentation\/bleconcurrency\/motionsensor"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral/peripheral":{"role":"symbol","title":"peripheral","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"}],"abstract":[{"type":"text","text":"the peripheral that are connected"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral\/peripheral","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/bleconcurrency\/asynccbperipheral\/peripheral"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/FCNanoBLESense":{"role":"symbol","title":"FCNanoBLESense","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FCNanoBLESense"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/FCNanoBLESense","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FCNanoBLESense"}],"url":"\/documentation\/bleconcurrency\/fcnanoblesense"},"doc://com.friisconsult.BLEConcurrency/tutorials/BuildApp":{"role":"overview","title":"<#text#>","abstract":[{"type":"text","text":"<#text#>"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildApp","kind":"overview","type":"topic","url":"\/tutorials\/buildapp"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBCentralManager":{"role":"symbol","title":"AsyncCBCentralManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBCentralManager"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCBCentralManager"}],"url":"\/documentation\/bleconcurrency\/asynccbcentralmanager"}}}