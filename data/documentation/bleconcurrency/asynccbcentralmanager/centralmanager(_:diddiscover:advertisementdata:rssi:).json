{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"central"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBCentralManager","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didDiscover"},{"kind":"text","text":" "},{"kind":"internalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":", "},{"kind":"externalParam","text":"advertisementData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"rssi"},{"kind":"text","text":" "},{"kind":"internalParam","text":"RSSI"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"central","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The central that calls us"}]}]},{"name":"peripheral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The discovered peripheral"}]}]},{"name":"advertisementData","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The advertised data"}]}]},{"name":"RSSI","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the signal strength"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Firstly we "},{"type":"strong","inlineContent":[{"type":"text","text":"check if we already have registered this peripheral"}]},{"type":"text","text":", if not, we check if there is a "},{"type":"strong","inlineContent":[{"type":"text","text":"name restriction"}]},{"type":"text","text":" on, and if this is parsed,"},{"type":"text","text":" "},{"type":"text","text":"we “collect” the peripheral and parse it to the stream"}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:diddiscover:advertisementdata:rssi:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager\/centralManager(_:didDiscover:advertisementData:rssi:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"When ever the central manager finds a peripheral that matches the requirements, as in, has published the services that we are looking for. This is called"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBCentralManager","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didDiscover"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":", "},{"kind":"externalParam","text":"advertisementData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"rssi"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":")"}],"title":"centralManager(_:didDiscover:advertisementData:rssi:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:14BLEConcurrency21AsyncCBCentralManagerC07centralD0_11didDiscover17advertisementData4rssiySo0cD0C_So12CBPeripheralCSDySSypGSo8NSNumberCtF","modules":[{"name":"BLEConcurrency"}]},"hierarchy":{"paths":[["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager"]]},"references":{"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency":{"role":"collection","title":"BLEConcurrency","abstract":[{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Redshirt_(stock_character)"},{"type":"text","text":" project, that I use to explore and refine the BLE implementation using Swift Async\/Await pattern"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency"},"https://en.wikipedia.org/wiki/Redshirt_(stock_character)":{"title":"Red Shirt","titleInlineContent":[{"type":"text","text":"Red Shirt"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Redshirt_(stock_character)","url":"https:\/\/en.wikipedia.org\/wiki\/Redshirt_(stock_character)"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBCentralManager":{"role":"symbol","title":"AsyncCBCentralManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBCentralManager"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCBCentralManager"}],"url":"\/documentation\/bleconcurrency\/asynccbcentralmanager"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBCentralManager/centralManager(_:didDiscover:advertisementData:rssi:)":{"role":"symbol","title":"centralManager(_:didDiscover:advertisementData:rssi:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBCentralManager","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didDiscover"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":", "},{"kind":"externalParam","text":"advertisementData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"rssi"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"When ever the central manager finds a peripheral that matches the requirements, as in, has published the services that we are looking for. This is called"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager\/centralManager(_:didDiscover:advertisementData:rssi:)","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:diddiscover:advertisementdata:rssi:)"}}}