{"variants":[{"paths":["\/tutorials\/bleconcurrency\/arduinoblesense"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"However the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.arduino.cc\/en\/software"},{"type":"text","text":" is not really a match for what you are used to, in terms of IDE, it works, and without that many complications. Please use some of the tutorials that are found on the web, to get acquainted with the include of libraries and upload of code to the Arduino."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the the new Arduino 2, new is a dangers word to use in a world like this, but new as of September 2022, where there is a RC version of the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"new"}]},{"type":"text","text":" IDE. is is better than the previous one."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But if you are a serious Arduino developer\/electronic engineer I will recommend to look into some of the extensions you can get to Visual Code, in terms of the IDE it is so much better, but sometimes it get a bit cumbersome, when installing libraries and when downloading to the device."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Well enough of me babbling around. start up your chosen IDE, and let’s add slome code."}]}],"estimatedTimeInMinutes":30,"title":"Arduino code","image":"arduino-ide2.png","chapter":"Download code to Arduino","kind":"hero","backgroundImage":"arduino-ide2.png"},{"kind":"tasks","tasks":[{"anchor":"Arduino-IDE-and-libraries","title":"Arduino IDE and libraries","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we going to start the Arduino programming."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Start a new Arduino project and let’s name it right away, that we can do by selecting "},{"type":"strong","inlineContent":[{"type":"text","text":"Save As…"}]},{"type":"text","text":" in the "},{"type":"strong","inlineContent":[{"type":"text","text":"File"}]},{"type":"text","text":" menu"}]}],"mediaPosition":"trailing","media":"arduino-ide2-save-as.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lets connect and select the board before we go any further, as some of the features might be disabled if you don’t have the right hardware connected and selected."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Connect your "},{"type":"strong","inlineContent":[{"type":"text","text":"BLE sense"}]},{"type":"text","text":" to an USB and use the board selector to identify the device and connect the port."}]}],"type":"step","runtimePreview":null,"media":"arduino-ide2-select-ble-sense.png"},{"code":"blesense.start","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"we start out with the standard structure of the Arduino programe."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is straightforward, as the "},{"type":"strong","inlineContent":[{"type":"text","text":"setup()"}]},{"type":"text","text":" function is like the main(), it runs upon device startup, and is often there you put in all the configuration. the "},{"type":"strong","inlineContent":[{"type":"text","text":"loop()"}]},{"type":"text","text":" is then called on each cycle, and are the place where the device become interesting."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"blesense.library","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we make sure that we have all the libraries installed that we need for this program."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"strong","inlineContent":[{"type":"text","text":"Library Manager"}]},{"type":"text","text":" and make sure that all the included libraries are installed and updated."}]}],"type":"step","runtimePreview":"arduino-ide2-library-manager.png","media":null}]},{"anchor":"Setup-the-values-for-Services-and-Characteristics","title":"Setup the values for Services and Characteristics","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s talk about GATT "},{"type":"strong","inlineContent":[{"type":"text","text":"Services"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"type":"text","text":"Characteristics"}]},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The GATT server exposes a list of services, that can be view as the major grouping of subjects. I usually have a service for the system, that includes the static device info."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"I also categorize the other values into logical "},{"type":"emphasis","inlineContent":[{"type":"text","text":"subjects"}]},{"type":"text","text":" in this case I have services for each sensor type and then I have characteristics for the specific sensor."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Optical sensors have a common "},{"type":"strong","inlineContent":[{"type":"text","text":"Service"}]},{"type":"text","text":" and that services has characteristics for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"gesture sensor"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"proximity sensor"}]},{"type":"text","text":" and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"color sensor"}]},{"type":"text","text":" all of them are optical sensors."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example there are "},{"type":"strong","inlineContent":[{"type":"text","text":"services"}]},{"type":"text","text":" for."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Motion sensors."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"with characteristics for"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Accelerator"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gyroscope"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Magnetic sensor"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optical sensors."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gesture"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Proximity"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Color"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Environment sensors."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Temperature"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Humidity"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pressure"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"strong","inlineContent":[{"type":"text","text":"Services"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"Characteristics"}]},{"type":"text","text":" are identified by a UUID, in the BLE world, is there a Bluetooth UUID, that are only 4 digits long, however you can use the full UUID if you feel like it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some "},{"type":"strong","inlineContent":[{"type":"text","text":"Services"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"Characteristics"}]},{"type":"text","text":" have standard UUID’s. when I have some of the standard values, that fits into a BLE standard UUID, I like to use it, as it is so much easier for other developers to use your peripheral."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the Device info service the standard is "},{"type":"strong","inlineContent":[{"type":"text","text":"180A"}]},{"type":"text","text":" and the serial number is "},{"type":"strong","inlineContent":[{"type":"text","text":"2A25"}]},{"type":"text","text":", there is also standards for battery etc. but lately I have had a tough time finding the standard as BLE org. have change the documentation, making it hard to find some standards like “GPS\/Location”."}]}],"mediaPosition":"trailing","media":"blesense.png"}],"stepsSection":[{"code":"blesense.constant","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"here is a dump of the services and characteristics I have decided to use for this Peripheral, together with som other constants."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add this constants to the BleSense.ino in the Arduino IDE"}]}],"type":"step","runtimePreview":null,"media":null},{"code":"blesense.services","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we will define all the "},{"type":"strong","inlineContent":[{"type":"text","text":"services"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"characteristics"}]},{"type":"text","text":" that we later will use in the GATT server."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the following after the constants."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"blesens.variables","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we setup the variables. It is important to remember that writing a program to the Arduino, is a low level C++ program, with fairly simple libraries. All handling of the run loop is up to us, including the timing in the loop."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the following variable to the "},{"type":"strong","inlineContent":[{"type":"text","text":"BleSense.ino"}]}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Create-BLE-functionality","title":"Create BLE functionality","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an overview of the BLE implementation on the Arduino."},{"type":"text","text":" "},{"type":"text","text":"The Arduino will run as a GATT server, but function as a peripheral."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting up a GATT server, on a BLE Peripheral, is fairly straight forward."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Setup BLE Peripheral starts by"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Initialize device name"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting connection interval"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add services"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"with characteristics"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"and event handler"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Setup event handlers"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start advertising"}]}]}]}],"mediaPosition":"trailing","media":"bleservices.png"}],"stepsSection":[{"code":null,"content":[],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]}],"identifier":{"url":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Arduino code","categoryPathComponent":"BuildBLEPeripheral","role":"project","category":"BLE Peripheral"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral\/Download-code-to-Arduino","projects":[{"reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense","sections":[{"kind":"task","reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Arduino-IDE-and-libraries"},{"kind":"task","reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Setup-the-values-for-Services-and-Characteristics"},{"kind":"task","reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Create-BLE-functionality"}]}]}],"reference":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral","paths":[["doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral","doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral\/$volume","doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral\/Download-code-to-Arduino"]]},"references":{"https://www.arduino.cc/en/software":{"title":"IDE from Arduino","titleInlineContent":[{"type":"text","text":"IDE from Arduino"}],"type":"link","identifier":"https:\/\/www.arduino.cc\/en\/software","url":"https:\/\/www.arduino.cc\/en\/software"},"doc://com.friisconsult.BLEConcurrency/tutorials/BuildBLEPeripheral/Download-code-to-Arduino":{"role":"article","title":"Download code to Arduino","abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral\/Download-code-to-Arduino","kind":"article","type":"topic","url":"\/tutorials\/buildbleperipheral\/download-code-to-arduino"},"doc://com.friisconsult.BLEConcurrency/tutorials/BLEConcurrency/Arduinoblesense":{"role":"project","title":"Arduino code","estimatedTime":"30min","abstract":[{"type":"text","text":"However the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.arduino.cc\/en\/software"},{"type":"text","text":" is not really a match for what you are used to, in terms of IDE, it works, and without that many complications. Please use some of the tutorials that are found on the web, to get acquainted with the include of libraries and upload of code to the Arduino."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense","kind":"project","type":"topic","url":"\/tutorials\/bleconcurrency\/arduinoblesense"},"blesense.png":{"alt":"some","type":"image","identifier":"blesense.png","variants":[{"url":"\/images\/blesense.png","traits":["1x","light"]}]},"doc://com.friisconsult.BLEConcurrency/tutorials/BLEConcurrency/Arduinoblesense#Setup-the-values-for-Services-and-Characteristics":{"role":"pseudoSymbol","title":"Setup the values for Services and Characteristics","abstract":[{"type":"text","text":"However the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.arduino.cc\/en\/software"},{"type":"text","text":" is not really a match for what you are used to, in terms of IDE, it works, and without that many complications. Please use some of the tutorials that are found on the web, to get acquainted with the include of libraries and upload of code to the Arduino."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Setup-the-values-for-Services-and-Characteristics","kind":"section","type":"section","url":"\/tutorials\/bleconcurrency\/arduinoblesense#Setup-the-values-for-Services-and-Characteristics"},"arduino-ide2-library-manager.png":{"alt":"Library manager","type":"image","identifier":"arduino-ide2-library-manager.png","variants":[{"url":"\/images\/arduino-ide2-library-manager.png","traits":["1x","light"]}]},"blesense.constant":{"syntax":"ino","content":["...","#include <ArduinoBLE.h>","","const int MAX_BUFFER_SIZE = 255;","","const char* DEVICE_NAME = \"BLE Sense Demo\";","const char* SERIAL_NUMBER = \"00001\";","","const char* devideInfoServiceUUID   = \"180A\";","const char* serialNumberCharUUID    = \"2A25\";","","const char* motionServiceUUID       = \"4000\";","const char* accelerationCharUUID    = \"4001\";","const char* gyroscopeCharUUID       = \"4002\";","const char* magneticCharUUID        = \"4003\";","","const char* opticalServiceUUID      = \"4A00\";","const char* gestureCharUUID         = \"4A01\";","const char* proximityCharUUID       = \"4A02\";","const char* colorCharUUID           = \"4A03\";","","","const char* environmentServiceUUID  = \"4C00\";","const char* temperatureCharUUID     = \"4C01\";","const char* humidityCharUUID        = \"4C02\";","","const char* pressureServiceUUID     = \"4D00\";","const char* pressureCharUUID        = \"4D01\";","","","void setup() {","..."],"fileName":"BleSense.ino","identifier":"blesense.constant","type":"file","fileType":"ino","highlights":[]},"blesense.start":{"syntax":"ino","content":["\/************************************************************\/","\/*                                                          *\/","\/* Created by Per Friis, Friis Consult ApS    April 6. 2022 *\/","\/* This is only for demo purpose, not valid for production  *\/","\/* in any was, the code is as is, and you can use it as you *\/","\/* please.                                                  *\/","\/* if you at some point publish or refer to this code,      *\/","\/* please give me the credit you find that i deserve        *\/","\/*                                                          *\/","\/* Current version, don't have all the features\/services    *\/","\/* Implemented yet.                                         *\/","\/************************************************************\/","","void setup() {","  \/\/ put your setup code here, to run once:","","}","","void loop() {","  \/\/ put your main code here, to run repeatedly:","","}"],"fileName":"BleSense.ino","identifier":"blesense.start","type":"file","fileType":"ino","highlights":[]},"blesense.library":{"syntax":"ino","content":["\/************************************************************\/","\/*                                                          *\/","\/* Created by Per Friis, Friis Consult ApS    April 6. 2022 *\/","\/* This is only for demo purpose, not valid for production  *\/","\/* in any was, the code is as is, and you can use it as you *\/","\/* please.                                                  *\/","\/* if you at some point publish or refer to this code,      *\/","\/* please give me the credit you find that i deserve        *\/","\/*                                                          *\/","\/* Current version, don't have all the features\/services    *\/","\/* Implemented yet.                                         *\/","\/************************************************************\/","","","","#include <Arduino_HTS221.h>","#include <Arduino_APDS9960.h>","#include <Arduino_LSM9DS1.h>","#include <Arduino_LPS22HB.h>","#include <ArduinoBLE.h>","","void setup() {","  \/\/ put your setup code here, to run once:","","}","","void loop() {","  \/\/ put your main code here, to run repeatedly:","","}"],"fileName":"BleSense.ino","identifier":"blesense.library","type":"file","fileType":"ino","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21}]},"bleservices.png":{"alt":"BLE logo with sensord","type":"image","identifier":"bleservices.png","variants":[{"url":"\/images\/bleservices.png","traits":["1x","light"]}]},"blesens.variables":{"syntax":"ino","content":["...","BLEDevice central;","","\/\/ timers","unsigned long motionCheck;","unsigned long opticalCheck;","unsigned long environmentCheck;","unsigned long pressureCheck;","","bool motionSubscription = false;","bool opticalSubscription = false;","bool environmentSubscription = false;","bool pressureSubscription = false;","","void setup() {","..."],"fileName":"BleSense.ino","identifier":"blesens.variables","type":"file","fileType":"ino","highlights":[{"line":1},{"line":2},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":10},{"line":11},{"line":12},{"line":13}]},"blesense.services":{"syntax":"ino","content":["","BLEService deviceInfoService(devideInfoServiceUUID);","BLECharacteristic serialNumberChar(serialNumberCharUUID, BLERead, MAX_BUFFER_SIZE, true);","","BLEService motionService(motionServiceUUID);","BLEFloatCharacteristic accelarationChar(accelerationCharUUID, BLERead | BLENotify);","BLEFloatCharacteristic gyroscopeChar(gyroscopeCharUUID, BLERead | BLENotify);","BLEFloatCharacteristic magneticChar(magneticCharUUID, BLERead | BLENotify);","","","BLEService opticalService(opticalServiceUUID);","BLEIntCharacteristic gestureChar(gestureCharUUID,BLERead | BLENotify);","BLECharacteristic colorChar(colorCharUUID, BLERead | BLENotify,3,true);","BLEIntCharacteristic proximityChar(proximityCharUUID, BLERead | BLENotify);","","","BLEService environmentService(environmentServiceUUID);","BLEFloatCharacteristic temperatureChar(temperatureCharUUID,BLERead | BLENotify);","BLEFloatCharacteristic humidityChar(humidityCharUUID,BLERead | BLENotify);","","BLEService pressureService(pressureServiceUUID);","BLEFloatCharacteristic pressureChar(pressureCharUUID, BLERead | BLENotify);","","BLEDevice central;","","void setup() {","..."],"fileName":"BleSense.ino","identifier":"blesense.services","type":"file","fileType":"ino","highlights":[{"line":2},{"line":3},{"line":5},{"line":6},{"line":7},{"line":8},{"line":11},{"line":12},{"line":13},{"line":14},{"line":17},{"line":18},{"line":19},{"line":21},{"line":22},{"line":24}]},"doc://com.friisconsult.BLEConcurrency/tutorials/BLEConcurrency/Arduinoblesense#Arduino-IDE-and-libraries":{"role":"pseudoSymbol","title":"Arduino IDE and libraries","abstract":[{"type":"text","text":"However the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.arduino.cc\/en\/software"},{"type":"text","text":" is not really a match for what you are used to, in terms of IDE, it works, and without that many complications. Please use some of the tutorials that are found on the web, to get acquainted with the include of libraries and upload of code to the Arduino."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Arduino-IDE-and-libraries","kind":"section","type":"section","url":"\/tutorials\/bleconcurrency\/arduinoblesense#Arduino-IDE-and-libraries"},"arduino-ide2.png":{"alt":"The first startup of arduino IDE 2.0RC","type":"image","identifier":"arduino-ide2.png","variants":[{"url":"\/images\/arduino-ide2.png","traits":["1x","light"]}]},"arduino-ide2-save-as.png":{"alt":"Save as from IDE","type":"image","identifier":"arduino-ide2-save-as.png","variants":[{"url":"\/images\/arduino-ide2-save-as.png","traits":["1x","light"]}]},"arduino-ide2-select-ble-sense.png":{"alt":"Select board in IDE","type":"image","identifier":"arduino-ide2-select-ble-sense.png","variants":[{"url":"\/images\/arduino-ide2-select-ble-sense.png","traits":["1x","light"]}]},"doc://com.friisconsult.BLEConcurrency/tutorials/BLEConcurrency/Arduinoblesense#Create-BLE-functionality":{"role":"pseudoSymbol","title":"Create BLE functionality","abstract":[{"type":"text","text":"However the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.arduino.cc\/en\/software"},{"type":"text","text":" is not really a match for what you are used to, in terms of IDE, it works, and without that many complications. Please use some of the tutorials that are found on the web, to get acquainted with the include of libraries and upload of code to the Arduino."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BLEConcurrency\/Arduinoblesense#Create-BLE-functionality","kind":"section","type":"section","url":"\/tutorials\/bleconcurrency\/arduinoblesense#Create-BLE-functionality"},"doc://com.friisconsult.BLEConcurrency/tutorials/BuildBLEPeripheral":{"role":"overview","title":"Arduino BLE sense","abstract":[{"type":"text","text":"This is fun, we start completely out of the iOS world, even though that this project is all about iOS and BLE connectivity."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/tutorials\/BuildBLEPeripheral","kind":"overview","type":"topic","url":"\/tutorials\/buildbleperipheral"}}}