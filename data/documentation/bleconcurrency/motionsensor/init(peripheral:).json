{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"peripheral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a connected peripheral with the motion service defined by Friis Consult"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncPeripheralError\/characteristicsMissing"},{"type":"text","text":" and much more…"}]}],"type":"aside","name":"Throws"},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You need the Arduino BLE device properly a Arduino nano 33 IoT, as you can’t use the BLE by it self, as this don’t have any build-in sensors, on the other hand the BLE uses a BLE 5.x compatible BLE chip from UBLOX, that is a UBLOX version of the Nordic Chip that UBLOX had taken over the design over."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the Arhuino BLE nano 33 BLE "},{"type":"strong","inlineContent":[{"type":"text","text":"sensor"}]},{"type":"text","text":" as this has a lot of sensors including ……"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But to use the Arduino BLE nano 33 BLE, you need to use another library as the motion sensor is not the same as the one on the Arduino nano 33 IoT."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be used when you have a peripheral. this returns a async version of the fully prepared version of the MotionSensor, that complies to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager"},{"type":"text","text":"  have a connection function, called "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager\/connect(_:)-24rbh"},{"type":"text","text":" that are the goto."}]},{"type":"codeListing","syntax":"swift","code":["   let asyncManger = AsyncCBCentralManager()...","   Task {","","       for await peripheral in asyncManager.peripherals {","           If peripheral.name == \"GyroScope\" {","           do {","              try await asyncManager.connect(peripheral)","               \/\/ TODO: here you can handle the device, that have been set on the asyncManager.device....","               \/\/ or you can use the return value from the ``AsyncCBCentralManager\/connect(_:)-24rbh`` .....","            } catch {","            \/\/ TODO: handle the error in a need and clear way... that makes the user \"happy\", or at least as happy they can be when they get and error","","       }","  }",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use this function you just need to …."}]},{"type":"codeListing","syntax":"swift","code":["let peripheral = ......","Task {","   do {","       let motionSensor = try await MotionSensor(peripheral: peripheral)","       ...","   } catch {","       \/\/ TODO: you know the song...","   }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bleconcurrency\/motionsensor\/init(peripheral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor\/init(peripheral:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"instantiate a motion sensor, BLE peripheral"}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"init(peripheral:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:14BLEConcurrency12MotionSensorC10peripheralACSo12CBPeripheralC_tYaKcfc","modules":[{"name":"BLEConcurrency"}]},"hierarchy":{"paths":[["doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency","doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor"]]},"references":{"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBCentralManager":{"role":"symbol","title":"AsyncCBCentralManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBCentralManager"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCBCentralManager"}],"url":"\/documentation\/bleconcurrency\/asynccbcentralmanager"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/MotionSensor":{"role":"symbol","title":"MotionSensor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MotionSensor"}],"abstract":[{"type":"text","text":"Implementation of the Motion sensor for the Arduino nano 33, with compatible sensors."}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MotionSensor"}],"url":"\/documentation\/bleconcurrency\/motionsensor"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/MotionSensor/init(peripheral:)":{"role":"symbol","title":"init(peripheral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"instantiate a motion sensor, BLE peripheral"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/MotionSensor\/init(peripheral:)","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency\/motionsensor\/init(peripheral:)"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency":{"role":"collection","title":"BLEConcurrency","abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBPeripheral":{"role":"symbol","title":"AsyncCBPeripheral","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCBPeripheral"}],"abstract":[{"type":"text","text":"This is a test to create a protocol that need to be used when implementing a AsyncCBPeripheral wrapper"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBPeripheral","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCBPeripheral"}],"url":"\/documentation\/bleconcurrency\/asynccbperipheral"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncCBCentralManager/connect(_:)-24rbh":{"role":"symbol","title":"connect(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:14BLEConcurrency21AsyncCBCentralManagerC1Txmfp"}],"abstract":[{"type":"text","text":"Connect and return a connected device encapsulated in a async handler"}],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncCBCentralManager\/connect(_:)-24rbh","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/connect(_:)-24rbh"},"doc://com.friisconsult.BLEConcurrency/documentation/BLEConcurrency/AsyncPeripheralError/characteristicsMissing":{"role":"symbol","title":"AsyncPeripheralError.characteristicsMissing","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"characteristicsMissing"}],"abstract":[],"identifier":"doc:\/\/com.friisconsult.BLEConcurrency\/documentation\/BLEConcurrency\/AsyncPeripheralError\/characteristicsMissing","kind":"symbol","type":"topic","url":"\/documentation\/bleconcurrency\/asyncperipheralerror\/characteristicsmissing"}}}