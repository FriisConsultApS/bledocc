{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Download code to Arduino","type":"groupMarker"},{"path":"\/tutorials\/bleconcurrency\/arduinoblesense","title":"Arduino code","type":"project"}],"path":"\/tutorials\/buildbleperipheral","title":"Arduino BLE sense","type":"overview"},{"path":"\/tutorials\/buildapp","title":"<#text#>","type":"overview"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/init(services:)","title":"init(services: [CBUUID]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/device","title":"var device: T?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/discoveredperipherals","title":"var discoveredPeripherals: [CBPeripheral]","type":"property"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/peripherals","title":"var peripherals: AsyncStream<CBPeripheral>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/cancelconnection(_:)","title":"func cancelConnection(T?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:didconnect:)","title":"func centralManager(CBCentralManager, didConnect: CBPeripheral)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:diddisconnectperipheral:error:)","title":"func centralManager(CBCentralManager, didDisconnectPeripheral: CBPeripheral, error: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManager, didDiscover: CBPeripheral, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanager(_:didfailtoconnect:error:)","title":"func centralManager(CBCentralManager, didFailToConnect: CBPeripheral, error: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManager)","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/connect(_:)-24rbh","title":"func connect(CBPeripheral) async throws -> T","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/connect(_:)-60mbb","title":"func connect(CBPeripheral.ID) async throws -> T","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/isready()","title":"func isReady() async -> Bool","type":"method"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/stopscan()","title":"func stopScan()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/subscript(_:)","title":"subscript(CBPeripheral.ID) -> CBPeripheral?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/centralmanagerstatecontinuation","title":"AsyncCBCentralManager.CentralManagerStateContinuation","type":"typealias"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/connectperipheralcontinuation","title":"AsyncCBCentralManager.ConnectPeripheralContinuation","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/asynccbcentralmanager","title":"AsyncCBCentralManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbperipheral\/init(peripheral:)","title":"init(peripheral: CBPeripheral) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbperipheral\/peripheral","title":"var peripheral: CBPeripheral","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbperipheral\/reconnect(peripheral:)","title":"func reconnect(peripheral: CBPeripheral)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccbperipheral\/namefilter","title":"static var nameFilter: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asynccbperipheral\/services","title":"static var services: [CBUUID]","type":"property"}],"path":"\/documentation\/bleconcurrency\/asynccbperipheral","title":"AsyncCBPeripheral","type":"protocol"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/init(peripheral:)","title":"init(peripheral: CBPeripheral) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/batteryvalue","title":"var batteryValue: AsyncStream<Double>","type":"property"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/peripheral","title":"var peripheral: CBPeripheral","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/reconnect(peripheral:)","title":"func reconnect(peripheral: CBPeripheral)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/initcontinuation","title":"BatteryMonitor.InitContinuation","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/batterychar","title":"static let batteryChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/batteryservice","title":"static let batteryService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/namefilter","title":"static var nameFilter: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/services","title":"static var services: [CBUUID]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/peripheral(_:diddiscovercharacteristicsfor:error:)","title":"func peripheral(CBPeripheral, didDiscoverCharacteristicsFor: CBService, error: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/peripheral(_:diddiscoverservices:)","title":"func peripheral(CBPeripheral, didDiscoverServices: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/batterymonitor\/peripheral(_:didupdatevaluefor:error:)","title":"func peripheral(CBPeripheral, didUpdateValueFor: CBCharacteristic, error: Error?)","type":"method"}],"path":"\/documentation\/bleconcurrency\/batterymonitor\/cbperipheraldelegate-implementations","title":"CBPeripheralDelegate Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/batterymonitor","title":"BatteryMonitor","type":"class"},{"children":[{"title":"Sensors","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/temperature","title":"var temperature: AsyncStream<Measurement<UnitTemperature>>","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/humidity","title":"var humidity: AsyncStream<Float>","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/init(peripheral:)","title":"init(peripheral: CBPeripheral) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/colorhex","title":"var colorHex: AsyncStream<RGBvalues>","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/peripheral","title":"var peripheral: CBPeripheral","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/pressure","title":"var pressure: AsyncStream<Measurement<UnitPressure>>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/reconnect(peripheral:)","title":"func reconnect(peripheral: CBPeripheral)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/initcontinuation","title":"FCNanoBLESense.InitContinuation","type":"typealias"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/rgbvalues","title":"FCNanoBLESense.RGBvalues","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/accelerationchar","title":"static let accelerationChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/colorchar","title":"static let colorChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/deviceinfoservice","title":"static let deviceInfoService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/environmentservice","title":"static let environmentService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/gesturechar","title":"static let gestureChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/gyroscopechar","title":"static let gyroscopeChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/humiditychar","title":"static let humidityChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/magneticchar","title":"static let magneticChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/motionservice","title":"static let motionService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/opticalservice","title":"static let opticalService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/pressurechar","title":"static let pressureChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/pressureservice","title":"static let pressureService: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/proximitychar","title":"static let proximityChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/serialnumberchar","title":"static let serialNumberChar: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/temperaturechar","title":"static let temperatureChar: CBUUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/namefilter","title":"static var nameFilter: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/services","title":"static var services: [CBUUID]","type":"property"}],"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/asynccbperipheral-implementations","title":"AsyncCBPeripheral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/peripheral(_:diddiscovercharacteristicsfor:error:)","title":"func peripheral(CBPeripheral, didDiscoverCharacteristicsFor: CBService, error: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/peripheral(_:diddiscoverservices:)","title":"func peripheral(CBPeripheral, didDiscoverServices: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/peripheral(_:didupdatevaluefor:error:)","title":"func peripheral(CBPeripheral, didUpdateValueFor: CBCharacteristic, error: Error?)","type":"method"}],"path":"\/documentation\/bleconcurrency\/fcnanoblesense\/cbperipheraldelegate-implementations","title":"CBPeripheralDelegate Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/fcnanoblesense","title":"FCNanoBLESense","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/init(peripheral:)","title":"init(peripheral: CBPeripheral) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/gyroscope","title":"var gyroscope: AsyncStream<Float3D>","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/peripheral","title":"var peripheral: CBPeripheral","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/reconnect(peripheral:)","title":"func reconnect(peripheral: CBPeripheral)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/float3d","title":"MotionSensor.Float3D","type":"typealias"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/initcontinuation","title":"MotionSensor.InitContinuation","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/accelerationscharuuid","title":"static let accelerationsCharUUID: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/deviceinfoserviceuuid","title":"static let deviceInfoServiceUUID: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/gyroscopecharuuid","title":"static let gyroscopeCharUUID: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/motionserviceuuid","title":"static let motionServiceUUID: CBUUID","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/namefilter","title":"static var nameFilter: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/services","title":"static let services: [CBUUID]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/peripheral(_:diddiscovercharacteristicsfor:error:)","title":"func peripheral(CBPeripheral, didDiscoverCharacteristicsFor: CBService, error: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/peripheral(_:diddiscoverservices:)","title":"func peripheral(CBPeripheral, didDiscoverServices: Error?)","type":"method"},{"path":"\/documentation\/bleconcurrency\/motionsensor\/peripheral(_:didupdatevaluefor:error:)","title":"func peripheral(CBPeripheral, didUpdateValueFor: CBCharacteristic, error: Error?)","type":"method"}],"path":"\/documentation\/bleconcurrency\/motionsensor\/cbperipheraldelegate-implementations","title":"CBPeripheralDelegate Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/motionsensor","title":"MotionSensor","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/init(store:)","title":"init(store: () -> AsyncCBCentralManager<MotionSensor>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/body","title":"var body: some Scene","type":"property"},{"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/store","title":"var store: AsyncCBCentralManager<MotionSensor>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp\/app-implementations","title":"App Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/bleconcurrencyapp","title":"BLEConcurrencyApp","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/contentview\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bleconcurrency\/contentview\/init(store:theitem:isscanning:devices:firstlaunch:selectedperipheralid:isworking:)","title":"init(store: EnvironmentObject<AsyncCBCentralManager<MotionSensor>>, theItem: String, isScanning: Bool, devices: [CBPeripheral], firstLaunch: Bool, selectedPeripheralId: CBPeripheral.ID?, isWorking: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/contentview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/devices","title":"var devices: [CBPeripheral]","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/firstlaunch","title":"var firstLaunch: Bool","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/isscanning","title":"var isScanning: Bool","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/isworking","title":"var isWorking: Bool","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/selectedperipheralid","title":"var selectedPeripheralId: CBPeripheral.ID?","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/store","title":"var store: AsyncCBCentralManager<MotionSensor>","type":"property"},{"path":"\/documentation\/bleconcurrency\/contentview\/theitem","title":"var theItem: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(activationpoint:)-6vr68","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(activationpoint:)-7fnbp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaction(named:_:)-30lzk","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaction(named:_:)-3v685","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaction(named:_:)-gd4u","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityactivationpoint(_:)-1ayte","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityactivationpoint(_:)-6vfwd","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-1bb8q","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-29huz","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-2ku6l","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-4fm0x","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-4l2dl","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-6an3b","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-6fpej","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitycustomcontent(_:_:importance:)-9yd7p","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityhint(_:)-132em","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityhint(_:)-60srk","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityhint(_:)-9kgcz","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityinputlabels(_:)-3a4oj","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityinputlabels(_:)-43t1v","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityinputlabels(_:)-9snb1","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitylabel(_:)-36dvg","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitylabel(_:)-407i3","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitylabel(_:)-vjmn","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityquickaction(style:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityquickaction(style:isactive:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:)-1sff7","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:)-2v4fr","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:)-5ffyo","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:)-75pi8","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5opap","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7wewk","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8hv6g","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-ayo","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entrylabel:)-1ud8j","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entrylabel:)-433m7","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entrylabel:)-4v7n","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:entries:entrylabel:)-6fkjb","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:textranges:)-4p057","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:textranges:)-7wvv7","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:textranges:)-8t2pu","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotor(_:textranges:)-97tge","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityvalue(_:)-2twhg","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityvalue(_:)-32hvc","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/accessibilityvalue(_:)-3iiel","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:)-3yw12","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:)-781os","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:)-9mklz","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:message:)-2uuch","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:message:)-7kydd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:actions:message:)-86qu2","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:)-2t9cj","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:)-4zzg","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:)-8fws4","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:message:)-28ib2","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:message:)-7x2us","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(_:ispresented:presenting:actions:message:)-805fn","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alignmentguide(_:computevalue:)-5o8x9","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/alignmentguide(_:computevalue:)-7vffk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/aspectratio(_:contentmode:)-48xn7","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/aspectratio(_:contentmode:)-9sby3","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(_:in:fillstyle:)-1kihp","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(_:in:fillstyle:)-6obo3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(in:fillstyle:)-26a4r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/background(in:fillstyle:)-271w2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/badge(_:)-1vz5q","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/badge(_:)-3z4yo","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/badge(_:)-74nuc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/badge(_:)-83ymv","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/buttonstyle(_:)-73wlu","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/buttonstyle(_:)-8x6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(_:)-4u2jf","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(_:)-5kpfm","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(domain:range:)-4skdd","title":"func chartSymbolScale<Domain>(domain: Domain, range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(domain:range:)-58pa2","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1un95","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2oxrn","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8d8mj","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2aoos","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5lwbp","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6cdt9","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3uc2z","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7mfuf","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-z10s","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-20jqh","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2t78n","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5lvd9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2bdfy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3xh96","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1ais5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7x4jt","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedobject(_:)-5r8x7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedobject(_:)-7bo4f","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedsceneobject(_:)-5axpc","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedsceneobject(_:)-71nuh","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedscenevalue(_:_:)-36tpg","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedscenevalue(_:_:)-7mr4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedvalue(_:_:)-5mrwp","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/focusedvalue(_:_:)-6495k","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/help(_:)-1l2qv","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/help(_:)-2ebph","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/help(_:)-5mh34","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/keyboardshortcut(_:)-1t76x","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/keyboardshortcut(_:)-jded","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linelimit(_:)-28p8d","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linelimit(_:)-707k7","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linelimit(_:)-7puec","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linelimit(_:)-8jsgp","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listitemtint(_:)-28j90","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listitemtint(_:)-77huj","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:)-1wiy","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:)-33w0w","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:)-tsbp","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:displaymode:)-3fctp","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:displaymode:)-8dcoz","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitle(_:displaymode:)-9ersu","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdocument(_:preview:)-33yr4","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdocument(_:preview:)-3kt1t","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdocument(_:preview:)-3npw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationdocument(_:preview:)-8xckg","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationtitle(_:)-18513","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationtitle(_:)-3qnmc","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationtitle(_:)-6k7r0","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationtitle(_:)-6zt0s","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/navigationtitle(_:)-9k6w","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:delegate:)-4llx9","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:delegate:)-74dpr","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:istargeted:perform:)-1c235","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:istargeted:perform:)-5ben4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:istargeted:perform:)-5g0h2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/ondrop(of:istargeted:perform:)-7opt2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/padding(_:)-38r9e","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/padding(_:)-39y10","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/renameaction(_:)-14rmu","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/renameaction(_:)-2u9wv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/safeareainset(edge:alignment:spacing:content:)-3e0mb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/safeareainset(edge:alignment:spacing:content:)-qf8n","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scaleeffect(_:anchor:)-7uyyk","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scaleeffect(_:anchor:)-81nd","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:)-7u861","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:)-8bpsv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:)-z0ns","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:suggestions:)-5ausk","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:suggestions:)-6oxg0","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:placement:prompt:suggestions:)-9gvx9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:)-421fx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:)-7rz87","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:)-9u6r8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:suggestions:)-1blxj","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:suggestions:)-6v0zf","title":"func searchable<C, T, V, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:placement:prompt:token:suggestions:)-8iur3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-83egp","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-8c3zo","title":"func searchable<C, T, D, V, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-dpu7","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-2hm6e","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-2td93","title":"func searchable<C, T, D, V1, V2, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-6qcgg","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3sjiz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4qzf9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9x76s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/contentview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbar(content:)-77xnw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbar(content:)-w03v","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/contentview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/bleconcurrency\/contentview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/contentview","title":"ContentView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/contentview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/contentview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/contentview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/bleconcurrency\/contentview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/contentview_previews","title":"ContentView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/init(store:device:)","title":"init(store: EnvironmentObject<AsyncCBCentralManager<MotionSensor>>, device: CBPeripheral?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/device","title":"var device: CBPeripheral?","type":"property"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/store","title":"var store: AsyncCBCentralManager<MotionSensor>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(activationpoint:)-136tt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(activationpoint:)-55bbj","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaction(named:_:)-6jqph","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaction(named:_:)-79jdc","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaction(named:_:)-9cwvk","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityactivationpoint(_:)-4w0df","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityactivationpoint(_:)-ldp0","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-13jn0","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-5000r","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-5k4zo","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-6fdie","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-7dlt8","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-9l23j","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-9ml34","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitycustomcontent(_:_:importance:)-f4oa","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityhint(_:)-1an3c","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityhint(_:)-6kz34","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityhint(_:)-8y16g","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityinputlabels(_:)-2buad","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityinputlabels(_:)-2dsu5","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityinputlabels(_:)-7r9vv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitylabel(_:)-2gq9r","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitylabel(_:)-71nmx","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitylabel(_:)-8ime0","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityquickaction(style:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityquickaction(style:isactive:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:)-2epoz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:)-69sen","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:)-6v9nr","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:)-80rd9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3y23q","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4v72j","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6j8e1","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8o9b4","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entrylabel:)-18ev","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entrylabel:)-5bem9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entrylabel:)-8lvfb","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:entries:entrylabel:)-cx14","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:textranges:)-40otl","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:textranges:)-44zr3","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:textranges:)-7yft9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotor(_:textranges:)-843jv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityvalue(_:)-1tvx3","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityvalue(_:)-6n6ky","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/accessibilityvalue(_:)-9v5bp","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:)-1rypb","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:)-54ptn","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:)-5gen","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:message:)-4qf48","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:message:)-6f9km","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:actions:message:)-th47","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:)-3gh4b","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:)-44anh","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:)-7zzio","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:message:)-1w29p","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:message:)-1xx0a","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(_:ispresented:presenting:actions:message:)-9fxn6","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alignmentguide(_:computevalue:)-604q6","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/alignmentguide(_:computevalue:)-9a8pi","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/aspectratio(_:contentmode:)-5p401","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/aspectratio(_:contentmode:)-81pdw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(_:in:fillstyle:)-1itoy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(_:in:fillstyle:)-8snlz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(in:fillstyle:)-12zod","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/background(in:fillstyle:)-494yh","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/badge(_:)-38ald","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/badge(_:)-3g6lq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/badge(_:)-49492","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/badge(_:)-51r5a","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/buttonstyle(_:)-199b9","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/buttonstyle(_:)-4ooku","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(_:)-1o6t1","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(_:)-98zhr","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(domain:range:)-7b8l4","title":"func chartSymbolScale<Domain>(domain: Domain, range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(domain:range:)-9i21g","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8r4m9","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8v97b","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-p272","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-157e8","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1ho3w","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ow8o","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1gcg2","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2fpi","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5zyvt","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2d5k0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-320qq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7k6gh","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6ywv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7jxpg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3ylk0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-92ool","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedobject(_:)-3kwo9","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedobject(_:)-8jkt","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedsceneobject(_:)-7bs8p","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedsceneobject(_:)-86kv2","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedscenevalue(_:_:)-1rlvl","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedscenevalue(_:_:)-8gjsl","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedvalue(_:_:)-1ct0u","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/focusedvalue(_:_:)-1tbcp","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/help(_:)-48ho3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/help(_:)-69mic","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/help(_:)-72c8n","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/keyboardshortcut(_:)-2dy8v","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/keyboardshortcut(_:)-bws1","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linelimit(_:)-45fi7","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linelimit(_:)-4qfu5","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linelimit(_:)-92ycy","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linelimit(_:)-kjdv","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listitemtint(_:)-2clv9","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listitemtint(_:)-96cp0","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:)-3dfa0","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:)-mvrs","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:)-vjx3","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:displaymode:)-5hj2m","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:displaymode:)-62ry","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitle(_:displaymode:)-6umty","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdocument(_:preview:)-2g0dw","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdocument(_:preview:)-36pdb","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdocument(_:preview:)-3a4ok","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationdocument(_:preview:)-62dyk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationtitle(_:)-1aqfl","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationtitle(_:)-1w057","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationtitle(_:)-4labp","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationtitle(_:)-7kow7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationtitle(_:)-9f75p","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:delegate:)-2cixj","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:delegate:)-9npy1","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:istargeted:perform:)-4op76","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:istargeted:perform:)-76jbw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:istargeted:perform:)-8f71p","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ondrop(of:istargeted:perform:)-8vmxz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/padding(_:)-2hgyg","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/padding(_:)-9u3tw","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/renameaction(_:)-17e16","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/renameaction(_:)-3i6pt","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/safeareainset(edge:alignment:spacing:content:)-4scbp","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/safeareainset(edge:alignment:spacing:content:)-tjnb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scaleeffect(_:anchor:)-6zktq","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scaleeffect(_:anchor:)-81sph","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:)-1o1i3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:)-1xrfd","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:)-4fyk0","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:suggestions:)-24tpk","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:suggestions:)-5f8i8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:placement:prompt:suggestions:)-8xcn7","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:)-230lc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:)-36us5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:)-8i0dx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:suggestions:)-448lg","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:suggestions:)-46gle","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:placement:prompt:token:suggestions:)-4jzbt","title":"func searchable<C, T, V, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-1g1u4","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-57lgi","title":"func searchable<C, T, D, V, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-9fb3r","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-2kdbe","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-63l1","title":"func searchable<C, T, D, V1, V2, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-7wayp","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1142x","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-14vv1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9192t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbar(content:)-229mj","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbar(content:)-3q0v0","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/bleconcurrency\/gyrodeviceview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/gyrodeviceview","title":"GyroDeviceView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/gyrodeviceview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/bleconcurrency\/gyrodeviceview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/gyrodeviceview_previews","title":"GyroDeviceView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview\/init(store:dismiss:id:)","title":"init(store: EnvironmentObject<AsyncCBCentralManager<FCNanoBLESense>>, dismiss: Environment<DismissAction>, id: CBPeripheral.ID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/bleconcurrency\/senseview\/dismiss","title":"var dismiss: DismissAction","type":"property"},{"path":"\/documentation\/bleconcurrency\/senseview\/id","title":"var id: CBPeripheral.ID","type":"property"},{"path":"\/documentation\/bleconcurrency\/senseview\/store","title":"var store: AsyncCBCentralManager<FCNanoBLESense>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview\/measurementformatter","title":"static var measurementFormatter: MeasurementFormatter","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(activationpoint:)-5e4yk","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(activationpoint:)-6x3ce","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaction(named:_:)-325rh","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaction(named:_:)-5y3el","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaction(named:_:)-86e6j","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityactivationpoint(_:)-3lqan","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityactivationpoint(_:)-8eoo1","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-100m8","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-15g81","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-2bznh","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-51qm9","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-5tbuu","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-6tmc5","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-8j55a","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitycustomcontent(_:_:importance:)-u8g3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityhint(_:)-32hrn","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityhint(_:)-4z0bt","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityhint(_:)-61xww","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityinputlabels(_:)-2my05","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityinputlabels(_:)-6e1a4","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityinputlabels(_:)-9okvc","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitylabel(_:)-451b8","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitylabel(_:)-5wmrq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitylabel(_:)-9jhtl","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityquickaction(style:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityquickaction(style:isactive:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:)-17blt","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:)-6uxbd","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:)-9gnrc","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:)-9p6kp","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7kvow","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9chr9","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9kxsq","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entryid:entrylabel:)-pus7","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entrylabel:)-4elsz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entrylabel:)-6r2dx","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entrylabel:)-7t6b5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:entries:entrylabel:)-gg02","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:textranges:)-3xj4m","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:textranges:)-5cl2w","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:textranges:)-6y4ms","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotor(_:textranges:)-7ez1b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityvalue(_:)-70ztu","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityvalue(_:)-7je29","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/accessibilityvalue(_:)-8c6i5","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:)-434nf","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:)-97d0j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:)-h38","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:message:)-3mwjs","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:message:)-7154q","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:actions:message:)-8ubrz","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:)-2lyxr","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:)-3l92u","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:)-9nnmo","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:message:)-1kqjz","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:message:)-1oemy","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(_:ispresented:presenting:actions:message:)-2d8xc","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alignmentguide(_:computevalue:)-897cg","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/alignmentguide(_:computevalue:)-93cbf","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/aspectratio(_:contentmode:)-39ics","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/aspectratio(_:contentmode:)-5x5or","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(_:in:fillstyle:)-7moqv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(_:in:fillstyle:)-chij","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(in:fillstyle:)-898g6","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/background(in:fillstyle:)-u06l","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/badge(_:)-8npzv","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/badge(_:)-8uufn","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/badge(_:)-954jv","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/badge(_:)-998c9","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/buttonstyle(_:)-1kdm8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/buttonstyle(_:)-1ou9s","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(_:)-2tefo","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(_:)-9afju","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(domain:range:)-6pki5","title":"func chartSymbolScale<Domain>(domain: Domain, range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(domain:range:)-83v7t","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1yorp","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5w3fm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-67q06","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4gsmg","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7803n","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-h6nt","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6weck","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-75kjr","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9di6r","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7qbmb","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8ibxs","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8knwa","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4fhgd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-67obv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5u4f5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9d226","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedobject(_:)-2dyci","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedobject(_:)-46eg7","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedsceneobject(_:)-1uyl7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedsceneobject(_:)-803zj","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedscenevalue(_:_:)-6r927","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedscenevalue(_:_:)-9twyf","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedvalue(_:_:)-1g2lg","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/focusedvalue(_:_:)-9tq77","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/help(_:)-38q0n","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/help(_:)-873yn","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/help(_:)-foh7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/keyboardshortcut(_:)-1fma5","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/keyboardshortcut(_:)-1x5ff","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linelimit(_:)-1twdh","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linelimit(_:)-42sc","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linelimit(_:)-5rhcm","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linelimit(_:)-617sj","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listitemtint(_:)-3ysf3","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listitemtint(_:)-6ddmo","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:)-28bpg","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:)-3gw66","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:)-8mx2s","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:displaymode:)-2nnou","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:displaymode:)-5k4co","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitle(_:displaymode:)-x9lr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdocument(_:preview:)-1elhh","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdocument(_:preview:)-1mzj1","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdocument(_:preview:)-5mzp0","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationdocument(_:preview:)-kmw4","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationtitle(_:)-21oqz","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationtitle(_:)-2u233","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationtitle(_:)-755g7","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationtitle(_:)-7nh8y","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/navigationtitle(_:)-7x6fm","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:delegate:)-78krp","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:delegate:)-7avvm","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:istargeted:perform:)-4h2e3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:istargeted:perform:)-50qis","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:istargeted:perform:)-9rtqh","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ondrop(of:istargeted:perform:)-mlek","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/padding(_:)-5xnab","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/padding(_:)-ex29","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/renameaction(_:)-5bzjw","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/renameaction(_:)-6yeb","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/safeareainset(edge:alignment:spacing:content:)-8g9u8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/safeareainset(edge:alignment:spacing:content:)-9okvo","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scaleeffect(_:anchor:)-2xnbf","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scaleeffect(_:anchor:)-64gwv","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:)-3nzzk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:)-7epm9","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:)-8n3u6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:suggestions:)-18jft","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:suggestions:)-5zuxp","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:placement:prompt:suggestions:)-9k9l5","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:)-2f7va","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:)-51a36","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:)-8f9h7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:suggestions:)-1hbvw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:suggestions:)-5752d","title":"func searchable<C, T, V, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:placement:prompt:token:suggestions:)-6ww27","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-1qxj0","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-4cffj","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-7lbst","title":"func searchable<C, T, D, V, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-4r5xy","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-54t9v","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-5nge5","title":"func searchable<C, T, D, V1, V2, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-403pn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5i8gd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8cvb4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/bleconcurrency\/senseview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbar(content:)-3v8pf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbar(content:)-7q7e7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/bleconcurrency\/senseview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/bleconcurrency\/senseview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/senseview","title":"SenseView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/senseview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/bleconcurrency\/senseview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/senseview_previews","title":"SenseView_Previews","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/notready","title":"case notReady","type":"case"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/peripheralnotfound","title":"case peripheralNotFound","type":"case"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/timeout","title":"case timeout","type":"case"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/unknownerror","title":"case unknownError","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/id-qm38","title":"var id: AsyncCentralManagerError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/id-1ye37","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/asynccentralmanagererror","title":"AsyncCentralManagerError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/characteristicsmissing","title":"case characteristicsMissing","type":"case"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/noservicesfound","title":"case noServicesFound","type":"case"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/unknownservicefound","title":"case unknownServiceFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/errordescription-9qd8l","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/id-8w96v","title":"var id: AsyncPeripheralError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/id-4c425","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/errordescription-stap","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/bleconcurrency\/asyncperipheralerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/bleconcurrency\/asyncperipheralerror","title":"AsyncPeripheralError","type":"enum"}],"path":"\/documentation\/bleconcurrency","title":"BLEConcurrency","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}